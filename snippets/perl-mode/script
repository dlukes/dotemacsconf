# -*- mode: snippet; require-final-newline: nil -*-
# key: script
# --
#!/usr/bin/env perl

# ${1:Script overview.}

use utf8;
use strict;
use warnings;
use open qw(:std :encoding(UTF-8));
use warnings qw(FATAL utf8);
use autodie;
use FindBin;
use Log::Fast;
use Getopt::ArgParse;
use v5.14;

my $LOG = Log::Fast->new({
  prefix => "[%D %T $FindBin::Script:%L] "
             });

sub parse_args {
  my $argv = \@_ || \@ARGV;

  my $ap = Getopt::ArgParse->new_parser(
    prog => $FindBin::Script,
    description => '${2:What this program does.}',
    epilog => '${3:This appears at the bottom of usage.}'
      );
  $ap->add_arg('--foo', '-f', required => 1);
  $ap->add_arg('--bool', '-b', type => 'Bool');
  # positional arg (or use subcommands)
  $ap->add_arg('command', help => 'command to run', required => 1);

  return $ap->parse_args(@$argv);
}

unless (caller) {
  my $args = parse_args();
}
